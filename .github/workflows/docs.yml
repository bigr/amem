name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[docs]"
        
    - name: Build documentation
      run: |
        # TODO: Add sphinx documentation build when docs are set up
        echo "Documentation build placeholder"
        
    - name: Check docstring coverage
      run: |
        # Check that all public functions have docstrings
        python -c "
        import ast
        import sys
        from pathlib import Path
        
        def check_docstrings(file_path):
            with open(file_path) as f:
                tree = ast.parse(f.read())
            
            for node in ast.walk(tree):
                if isinstance(node, (ast.FunctionDef, ast.ClassDef)):
                    if not node.name.startswith('_'):  # Public functions/classes
                        if not ast.get_docstring(node):
                            print(f'Missing docstring: {file_path}:{node.lineno} {node.name}')
                            return False
            return True
        
        all_good = True
        for py_file in Path('src').rglob('*.py'):
            if not check_docstrings(py_file):
                all_good = False
        
        if not all_good:
            sys.exit(1)
        "